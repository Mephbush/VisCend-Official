@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Enhanced Theme Colors */
    --primary: 348 100% 65%;           /* Hot Pink/Magenta */
    --primary-foreground: 0 0% 98%;
    --secondary: 270 100% 70%;         /* Electric Purple */
    --secondary-foreground: 0 0% 98%;
    --accent: 195 100% 60%;            /* Cyan/Electric Blue */
    --accent-foreground: 0 0% 98%;

    /* Background & Surfaces - Enhanced Contrast */
    --background: 222 40% 3%;          /* Deeper Dark Blue */
    --foreground: 0 0% 98%;            /* Brighter Light text */
    --muted: 222 30% 8%;               /* Slightly lighter dark */
    --muted-foreground: 0 0% 75%;      /* Brighter Muted text */
    --card: 222 35% 5%;                /* Darker Card background */
    --card-foreground: 0 0% 95%;       /* Brighter Card text */
    
    /* UI Elements - Enhanced Visibility */
    --border: 222 25% 15%;             /* Brighter Border color */
    --input: 222 30% 8%;               /* Input background */  
    --ring: 348 100% 65%;              /* Focus ring */
    --popover: 222 35% 5%;
    --popover-foreground: 0 0% 95%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

  /* Enhanced Gradients */
  --gradient-primary: linear-gradient(135deg, hsl(348 100% 65%) 0%, hsl(270 100% 70%) 100%);
  --gradient-secondary: linear-gradient(135deg, hsl(270 100% 70%) 0%, hsl(195 100% 60%) 100%);
  --gradient-accent: linear-gradient(135deg, hsl(195 100% 60%) 0%, hsl(348 100% 65%) 100%);
  --gradient-glass: linear-gradient(135deg, hsla(222, 35%, 8%, 0.8) 0%, hsla(222, 35%, 5%, 0.6) 100%);
  --gradient-radial: radial-gradient(circle, var(--tw-gradient-stops));
    /* Enhanced Neon Glows */
    --glow-primary: 0 0 30px hsl(348 100% 65% / 0.5);
    --glow-secondary: 0 0 30px hsl(270 100% 70% / 0.5);
    --glow-accent: 0 0 20px hsl(195 100% 60% / 0.4);
    
    /* Enhanced Shadows */
    --shadow-cinematic: 0 25px 50px -12px hsl(222 40% 1% / 0.8);
    --shadow-glass: 0 8px 32px hsl(222 40% 1% / 0.4);
    --shadow-neon: 0 0 20px hsl(348 100% 65% / 0.3);
    
    /* Animation Timing */
    --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-slow: 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    
    --radius: 1rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .light {
    /* Light mode - enhanced contrast and visibility */
    --background: 210 40% 98%;
    --foreground: 222 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222 84% 4.9%;

    --primary: 340 82% 52%;
    --primary-foreground: 0 0% 100%;

    --secondary: 260 82% 58%;
    --secondary-foreground: 0 0% 100%;

    --muted: 210 40% 94%;
    --muted-foreground: 215.4 16.3% 35%;

    --accent: 200 85% 55%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 214.3 31.8% 85%;
    --input: 214.3 31.8% 90%;
    --ring: 340 82% 52%;

    --gradient-primary: linear-gradient(135deg, hsl(340 82% 52%) 0%, hsl(260 82% 58%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(260 82% 58%) 0%, hsl(200 85% 55%) 100%);
    --gradient-glass: linear-gradient(135deg, hsla(0, 0%, 100%, 0.95) 0%, hsla(210, 40%, 96%, 0.85) 100%);

    --glow-primary: 0 0 15px hsl(340 82% 52% / 0.2);
    --glow-secondary: 0 0 15px hsl(260 82% 58% / 0.15);

    --shadow-cinematic: 0 20px 40px -12px hsl(222 84% 4.9% / 0.15);
    --shadow-glass: 0 8px 32px hsl(222 84% 4.9% / 0.1);
  }
}

@layer base {
  body {
    @apply bg-background text-foreground font-sans antialiased;
    background: radial-gradient(ellipse at top, hsl(222 40% 8%) 0%, hsl(222 40% 3%) 100%);
    min-height: 100vh;
  }

  .light body {
    background: radial-gradient(ellipse at top, hsl(210 40% 98%) 0%, hsl(210 40% 94%) 100%);
  }
  
  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Glass morphism effect */
  .glass {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--border) / 0.2);
  }
  
  /* Neon text effects */
  .text-neon-primary {
    color: hsl(var(--primary));
    text-shadow: var(--glow-primary);
    position: relative;
    z-index: 10;
  }
  
  .text-neon-secondary {
    color: hsl(var(--secondary));
    text-shadow: var(--glow-secondary);
    position: relative;
    z-index: 10;
  }
  
  /* Gradient text */
  .text-gradient-primary {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
    z-index: 10;
    display: inline-block;
  }
  
  /* Hero section styles */
  .hero-pattern {
    background-image: 
      radial-gradient(circle at 25% 25%, hsl(348 100% 65% / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, hsl(217 100% 60% / 0.1) 0%, transparent 50%);
  }
  
  /* Interactive button styles */
  .btn-cinematic {
    background: var(--gradient-primary);
    box-shadow: var(--shadow-neon);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
  }
  
  .btn-cinematic:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-cinematic), var(--glow-primary);
  }
  
  .btn-cinematic::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }
  
  .btn-cinematic:hover::before {
    left: 100%;
  }
  
  /* Animated underline for links */
  .link-underline {
    position: relative;
    text-decoration: none;
  }
  
  .link-underline::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--gradient-primary);
    transition: width var(--transition-normal);
    z-index: 30;
  }
  
  .link-underline:hover::after {
    width: 100%;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }
  
  ::-webkit-scrollbar-thumb {
    background: var(--gradient-primary);
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: var(--gradient-secondary);
  }

  /* Custom cursor styles - show default cursor with particle effects */
  body {
    cursor: auto !important;
  }

  a, button, [role="button"], input, textarea, select {
    cursor: pointer !important;
  }

  /* Gradient Background */
  .bg-gradient-radial {
    background: radial-gradient(circle, var(--tw-gradient-stops));
  }

  /* Text visibility fixes */
  .text-foreground, .text-muted-foreground, p, span, h1, h2, h3, h4, h5, h6 {
    position: relative;
    z-index: 10;
  }

  /* Arabic font support */
  .font-arabic {
    font-family: 'Cairo', 'Tajawal', 'Amiri', sans-serif;
  }

  /* Animation utilities */
  /* Animations are paused by default and will play when 'sr-play' class is added by the reveal logic */
  .animate-gradient-shift {
    animation: gradient-shift 3s ease-in-out infinite;
    animation-play-state: paused;
  }

  .animate-glow-pulse {
    animation: glow-pulse 2s ease-in-out infinite;
    animation-play-state: paused;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
    animation-play-state: paused;
  }

  .animate-fade-in {
    animation: fade-in 0.6s ease-out;
    animation-play-state: paused;
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out;
    animation-play-state: paused;
  }

  /* When the reveal logic marks an element, allow it to run */
  .sr-play.animate-gradient-shift,
  .sr-play.animate-glow-pulse,
  .sr-play.animate-float,
  .sr-play.animate-fade-in,
  .sr-play.animate-fade-in-up,
  .sr-play.animate-scale-in,
  .sr-play.animate-slide-in-left,
  .sr-play.animate-slide-in-right,
  .sr-play.animate-gradient-shift {
    animation-play-state: running;
  }

  /* Logo hover tilt (subtle) */
  .logo-hover {
    transition: transform 1.2s ease, filter var(--transition-fast);
    will-change: transform;
    display: inline-block;
  }

  @media (hover: hover) and (pointer: fine) {
    .logo-hover:hover {
      transform: rotate(360deg) scale(1.02);
      filter: drop-shadow(var(--glow-primary));
    }
  }

  /* Ensure decorative absolute backgrounds don't capture pointer events */
  .absolute-decorative {
    pointer-events: none;
  }

  /* Dynamic animated hero background (smooth, performant) */
  .dynamic-hero-bg {
    background: radial-gradient(circle at 30% 30%, rgba(99,102,241,0.12), transparent 25%),
                radial-gradient(circle at 70% 70%, rgba(34,211,238,0.12), transparent 25%),
                radial-gradient(circle at 50% 50%, rgba(236,72,153,0.08), transparent 30%);
    background-size: 300% 300%;
    animation: dynamic-bg-shift 12s ease-in-out infinite;
    mix-blend-mode: screen;
  }

  @keyframes dynamic-bg-shift {
    0% { background-position: 0% 50%, 100% 50%, 50% 0%; }
    50% { background-position: 100% 50%, 0% 50%, 50% 100%; }
    100% { background-position: 0% 50%, 100% 50%, 50% 0%; }
  }
}

@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes glow-pulse {
  0%, 100% { filter: brightness(1) drop-shadow(0 0 10px currentColor); }
  50% { filter: brightness(1.2) drop-shadow(0 0 20px currentColor); }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-20px) rotate(1deg); }
  66% { transform: translateY(-10px) rotate(-1deg); }
}

@keyframes fade-in {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fade-in-up {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}
